/* Growbox Arduino!
 Program been included drivers to:
  *  SSD1306 Oled display
  *  DHT22 temperature and humidity sensor
  *  3x Dallas DS18B20 sensor
  *  2x fun(to regulate and stabilisation temperature and humidity)
  *  Soil Humidity Sensor  
  *  RTC modulde
  *  In future I will add wifi module
 */
  
#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>
#include <DallasTemperature.h>
#include <OneWire.h>
#include <Wire.h>
#include <SimpleDHT.h>


  #define ahumid_min 55
  #define ahumid_max 70
 
  #define ghumid_min 50
  #define ghumid_max 80
 
  #define atemp_min 21
  #define atemp_max 25
 
  #define gtemp_min 18
  #define gtemp_max 20
 
Adafruit_SSD1306 Display(2);

OneWire oneWire(3);
DallasTemperature sensors(&oneWire);


#define DHTPIN 4    // what pin we're connected to
#define DHTTYPE DHT22 
int att = 5;
int State = LOW;
int temp_1 = 0;
int temp_2 = 0;
int temp_3 = 0;
int ghum1 = 0;
int chk;
int gleb;
float hum;  //Stores humidity value
float temp; //Tepmerature value
bool Century = false;
unsigned long previousMillis1 = 0;
long OnTime1 = 500;
long OffTime1 = 500; 
 
 static const unsigned char PROGMEM logo16_glcd_bmp[] =
{ B00000001, B10000000,
  B00000011, B11110000,
  B00000010, B01000000,
  B00000010, B01100000,
  B00000010, B01000000,
  B00000010, B01110000,
  B00000010, B01000000,
  B00000011, 111000000,
  B00000011, B11000000,
  B00000111, B11100000,
  B00001111, B11110000,
  B00001111, B11110000,
  B00001111, B11110000,
  B00001111, B11110000,
  B00001111, B11100000,
  B00000111, B11100000 };

static const unsigned char PROGMEM kropla[] =
{ B00000001, B10000000,
  B00000001, B10000000,
  B00000011, B11000000,
  B00000011, B11000000,
  B00000111, B11100000,
  B00000111, B11100000,
  B00001111, B11110000,
  B00001111, B11110000,
  B00011111, B11111000,
  B00011111, B11111000,
  B00011111, B11111000,
  B00011111, B11111000,
  B00001111, B11110000,
  B00001111, B11110000,
  B00000111, B11100000,
  B00000001, B11000000 };

void Watchdog() { 
if(State==HIGH) {
State=LOW;
DigitalWrite(att, State);
}
else if (State==LOW) {
State=HIGH
digitalWtrte(att, State);
}



void PrintData() {
Display.setTextSize(1);
Display.setTextColor(WHITE);
Display.SetCursor(100, 21); Display.print(temp);
Display.SetCursor(100, 31); Display.print(hum);
Display.SetCursor(100, 41); Display.print(temp_1);
Display.SetCursor(100, 51); Display.print(gleb);
Display.display();

}



void DrawMenu() {


    Display.setTextSize(2);
  Display.setTextColor(WHITE);
  Display.setCursor(20, 2);
  Display.println("GrowBox");
  Display.drawRect(0, 0, 128, 16, WHITE);
  Display.setTextSize(1);
  Display.setCursor(0, 11);
  Display.setCursor(90, 11);
  Display.drawBitmap(0, 21,  logo16_glcd_bmp, 16, 16, 1);
  Display.drawBitmap(0, 41,  kropla, 16, 16, 1);
  Display.drawLine(0,63, 128, 63, 1);
  Display.display();
  Display.setCursor(16, 21);
  Display.print("Powietrza"); 
  Display.setCursor(16, 41);
  Display.print("Powietrza");
  Display.setCursor(16, 31);
  Display.print("Gleby");
  Display.setCursor(16, 51);
  Display.print("Gleby");
  Display.display();

}
void check() {
  for(temp_1 < atemp_min){
    
  }
  for(temp_1 > atemp_max){
    
  }
  for(gleb < ghumid_min){
     
  }
  for(gleb > ghumid_max) {
    
  }
  
  
}

void reading () {

       sensors.requestTemperatures();
       temp_1 = sensors.getTempCByIndex(0);
       temp_2 = sensors.getTempCByIndex(1);
       temp_3 = sensors.getTempCByIndex(2);
       hum = dht.readHumidity();
       temp= dht.readTemperature();
  
}

void setup() {
    Display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
      dht.begin();
      pinMode(att, OUTPUT);
    
  }

void loop() {

unsigned long currentMillis = millis();
if(currentMillis - previousMillis >= OnTime) {
DrawMenu();
PrintData();
} else if (currentMillis - previousMillis >= OffTime) {
  reading();
  check();
  WatchDog();
}
}


